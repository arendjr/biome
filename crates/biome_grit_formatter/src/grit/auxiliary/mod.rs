//! This is a generated file. Don't modify it by hand! Run 'cargo codegen formatter' to re-generate the file.

pub(crate) mod add_operation;
pub(crate) mod annotation;
pub(crate) mod assignment_as_pattern;
pub(crate) mod bubble;
pub(crate) mod bubble_scope;
pub(crate) mod code_snippet;
pub(crate) mod div_operation;
pub(crate) mod dot;
pub(crate) mod dotdotdot;
pub(crate) mod every;
pub(crate) mod files;
pub(crate) mod function_definition;
pub(crate) mod language_declaration;
pub(crate) mod language_flavor;
pub(crate) mod language_flavor_kind;
pub(crate) mod language_name;
pub(crate) mod language_specific_snippet;
pub(crate) mod like;
pub(crate) mod like_threshold;
pub(crate) mod list_accessor;
pub(crate) mod map;
pub(crate) mod map_accessor;
pub(crate) mod map_element;
pub(crate) mod mod_operation;
pub(crate) mod mul_operation;
pub(crate) mod name;
pub(crate) mod named_arg;
pub(crate) mod named_arg_with_default;
pub(crate) mod node_like;
pub(crate) mod not;
pub(crate) mod pattern_accumulate;
pub(crate) mod pattern_after;
pub(crate) mod pattern_and;
pub(crate) mod pattern_any;
pub(crate) mod pattern_as;
pub(crate) mod pattern_before;
pub(crate) mod pattern_contains;
pub(crate) mod pattern_contains_until_clause;
pub(crate) mod pattern_definition;
pub(crate) mod pattern_definition_body;
pub(crate) mod pattern_else_clause;
pub(crate) mod pattern_if_else;
pub(crate) mod pattern_includes;
pub(crate) mod pattern_limit;
pub(crate) mod pattern_maybe;
pub(crate) mod pattern_not;
pub(crate) mod pattern_or;
pub(crate) mod pattern_or_else;
pub(crate) mod pattern_where;
pub(crate) mod predicate_accumulate;
pub(crate) mod predicate_and;
pub(crate) mod predicate_any;
pub(crate) mod predicate_assignment;
pub(crate) mod predicate_call;
pub(crate) mod predicate_definition;
pub(crate) mod predicate_else_clause;
pub(crate) mod predicate_equal;
pub(crate) mod predicate_greater;
pub(crate) mod predicate_greater_equal;
pub(crate) mod predicate_if_else;
pub(crate) mod predicate_less;
pub(crate) mod predicate_less_equal;
pub(crate) mod predicate_match;
pub(crate) mod predicate_maybe;
pub(crate) mod predicate_not;
pub(crate) mod predicate_not_equal;
pub(crate) mod predicate_or;
pub(crate) mod predicate_return;
pub(crate) mod predicate_rewrite;
pub(crate) mod regex_pattern;
pub(crate) mod regex_pattern_variables;
pub(crate) mod rewrite;
pub(crate) mod root;
pub(crate) mod sequential;
pub(crate) mod some;
pub(crate) mod sub_operation;
pub(crate) mod underscore;
pub(crate) mod variable;
pub(crate) mod version;
pub(crate) mod within;
