---
source: crates/biome_module_graph/tests/snap/mod.rs
expression: content
---
# `/src/index.ts` (Not imported by resolver)

## Source

```ts
interface Foo {
	foo(): string;
}

interface Bar {
	foo(): number;
	bar(): boolean;
}

type Intersection = Foo & Bar;
```

## Module Info

```
Exports {
  No exports
}
Imports {
  No imports
}
```

## Registered types

```
Module TypeId(0) => sync Function "foo" {
  accepts: {
    params: []
    type_args: []
  }
  returns: string
}

Module TypeId(1) => interface "Foo" {
  extends: []
  type_args: []
  members: ["foo": Module(0) TypeId(0)]
}

Module TypeId(2) => sync Function "foo" {
  accepts: {
    params: []
    type_args: []
  }
  returns: number
}

Module TypeId(3) => boolean

Module TypeId(4) => sync Function "bar" {
  accepts: {
    params: []
    type_args: []
  }
  returns: Module(0) TypeId(3)
}

Module TypeId(5) => interface "Bar" {
  extends: []
  type_args: []
  members: ["foo": Module(0) TypeId(2), "bar": Module(0) TypeId(4)]
}

Module TypeId(6) => instanceof Module(0) TypeId(1)

Module TypeId(7) => instanceof Module(0) TypeId(5)

Module TypeId(8) => interface "(merged)" {
  extends: []
  type_args: []
  members: ["foo": Module(0) TypeId(9), "bar": Module(0) TypeId(4)]
}

Module TypeId(9) => Module(0) TypeId(2) | Module(0) TypeId(0)
```

# Module Resolver

## Registered types

```
Full TypeId(0) => sync Function "foo" {
  accepts: {
    params: []
    type_args: []
  }
  returns: string
}

Full TypeId(1) => interface "Foo" {
  extends: []
  type_args: []
  members: ["foo": Module(0) TypeId(0)]
}

Full TypeId(2) => sync Function "foo" {
  accepts: {
    params: []
    type_args: []
  }
  returns: number
}

Full TypeId(3) => boolean

Full TypeId(4) => sync Function "bar" {
  accepts: {
    params: []
    type_args: []
  }
  returns: Module(0) TypeId(3)
}

Full TypeId(5) => interface "Bar" {
  extends: []
  type_args: []
  members: ["foo": Module(0) TypeId(2), "bar": Module(0) TypeId(4)]
}

Full TypeId(6) => instanceof Module(0) TypeId(1)

Full TypeId(7) => instanceof Module(0) TypeId(5)

Full TypeId(8) => interface "(merged)" {
  extends: []
  type_args: []
  members: ["foo": Module(0) TypeId(9), "bar": Module(0) TypeId(4)]
}

Full TypeId(9) => Module(0) TypeId(2) | Module(0) TypeId(0)
```
