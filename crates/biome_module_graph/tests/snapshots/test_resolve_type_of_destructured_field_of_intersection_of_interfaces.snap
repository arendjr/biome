---
source: crates/biome_module_graph/tests/snap/mod.rs
expression: content
---
# `/src/index.ts` (Not imported by resolver)

## Source

```ts
type FullConfiguration = InternalConfiguration & PublicConfiguration;

type ScopedMutator<Data = any, T = Data> = (
	key: Arguments,
	data?: T | Promise<T> | MutatorCallback<T>,
	opts?: boolean | MutatorOptions<Data, T>,
) => Promise<T | undefined>;

interface InternalConfiguration {
	cache: Cache;
	mutate: ScopedMutator;
}

interface PublicConfiguration {
	errorRetryInterval: number;
}

declare const useSWRConfig: () => FullConfiguration;

const { mutate } = useSWRConfig();
```

## Module Info

```
Exports {
  No exports
}
Imports {
  No imports
}
```

## Registered types

```
Module TypeId(0) => unknown

Module TypeId(1) => Module(0) TypeId(10) | Module(0) TypeId(22) | Module(0) TypeId(0)

Module TypeId(2) => boolean

Module TypeId(3) => Module(0) TypeId(2) | Module(0) TypeId(0)

Module TypeId(4) => instanceof Module(0) TypeId(9)

Module TypeId(5) => sync Function {
  accepts: {
    params: []
    type_args: []
  }
  returns: Module(0) TypeId(4)
}

Module TypeId(6) => instanceof Module(0) TypeId(16)<Module(0) TypeId(18), Module(0) TypeId(19)>

Module TypeId(7) => instanceof Module(0) TypeId(20)

Module TypeId(8) => instanceof Module(0) TypeId(21)

Module TypeId(9) => interface "(merged)" {
  extends: []
  type_args: []
  members: [
    "cache": Module(0) TypeId(0),
    "mutate": Module(0) TypeId(16),
    "errorRetryInterval": number
  ]
}

Module TypeId(10) => instanceof Module(0) TypeId(19)

Module TypeId(11) => Module(0) TypeId(10) | Module(0) TypeId(23) | Module(0) TypeId(0)

Module TypeId(12) => instanceof Module(0) TypeId(18)

Module TypeId(13) => Module(0) TypeId(2) | Module(0) TypeId(0)

Module TypeId(14) => undefined

Module TypeId(15) => Module(0) TypeId(10) | Module(0) TypeId(14)

Module TypeId(16) => sync Function {
  accepts: {
    params: [
      required key: Module(0) TypeId(0) (bindings: key:Module(0) TypeId(0))
      optional data: Module(0) TypeId(11) (bindings: data:Module(0) TypeId(11))
      optional opts: Module(0) TypeId(13) (bindings: opts:Module(0) TypeId(13))
    ]
    type_args: []
  }
  returns: Module(0) TypeId(24)
}

Module TypeId(17) => any

Module TypeId(18) => Data = unknown reference

Module TypeId(19) => T = unknown reference

Module TypeId(20) => interface "InternalConfiguration" {
  extends: []
  type_args: []
  members: ["cache": Module(0) TypeId(0), "mutate": Module(0) TypeId(16)]
}

Module TypeId(21) => interface "PublicConfiguration" {
  extends: []
  type_args: []
  members: ["errorRetryInterval": number]
}

Module TypeId(22) => instanceof Promise<Module(0) TypeId(10)>

Module TypeId(23) => instanceof Promise<Module(0) TypeId(10)>

Module TypeId(24) => instanceof Promise<Module(0) TypeId(15)>
```

# Scoped Type Resolver

## Registered types

```
Full TypeId(0) => unknown

Full TypeId(1) => Module(0) TypeId(10) | Module(0) TypeId(22) | Module(0) TypeId(0)

Full TypeId(2) => boolean

Full TypeId(3) => Module(0) TypeId(2) | Module(0) TypeId(0)

Full TypeId(4) => instanceof Module(0) TypeId(9)

Full TypeId(5) => sync Function {
  accepts: {
    params: []
    type_args: []
  }
  returns: Module(0) TypeId(4)
}

Full TypeId(6) => sync Function {
  accepts: {
    params: [
      required key: Module(0) TypeId(0) (bindings: key:Module(0) TypeId(0))
      optional data: Module(0) TypeId(11) (bindings: data:Module(0) TypeId(11))
      optional opts: Module(0) TypeId(13) (bindings: opts:Module(0) TypeId(13))
    ]
    type_args: []
  }
  returns: Module(0) TypeId(24)
}

Full TypeId(7) => instanceof Module(0) TypeId(20)

Full TypeId(8) => instanceof Module(0) TypeId(21)

Full TypeId(9) => interface "(merged)" {
  extends: []
  type_args: []
  members: [
    "cache": Module(0) TypeId(0),
    "mutate": Module(0) TypeId(16),
    "errorRetryInterval": number
  ]
}

Full TypeId(10) => instanceof Module(0) TypeId(19)

Full TypeId(11) => Module(0) TypeId(10) | Module(0) TypeId(23) | Module(0) TypeId(0)

Full TypeId(12) => instanceof Module(0) TypeId(18)

Full TypeId(13) => undefined

Full TypeId(14) => Module(0) TypeId(10) | Module(0) TypeId(14)

Full TypeId(15) => sync Function {
  accepts: {
    params: [
      required key: Module(0) TypeId(0) (bindings: key:Module(0) TypeId(0))
      optional data: Module(0) TypeId(11) (bindings: data:Module(0) TypeId(11))
      optional opts: Module(0) TypeId(13) (bindings: opts:Module(0) TypeId(13))
    ]
    type_args: []
  }
  returns: Module(0) TypeId(24)
}

Full TypeId(16) => any

Full TypeId(17) => Data = unknown reference

Full TypeId(18) => T = unknown reference

Full TypeId(19) => interface "InternalConfiguration" {
  extends: []
  type_args: []
  members: ["cache": Module(0) TypeId(0), "mutate": Module(0) TypeId(16)]
}

Full TypeId(20) => interface "PublicConfiguration" {
  extends: []
  type_args: []
  members: ["errorRetryInterval": number]
}

Full TypeId(21) => instanceof Promise<Module(0) TypeId(10)>

Full TypeId(22) => instanceof Promise<Module(0) TypeId(15)>
```
